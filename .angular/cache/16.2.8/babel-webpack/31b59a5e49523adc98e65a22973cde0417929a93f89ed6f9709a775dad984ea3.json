{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AppComponent = class AppComponent {\n  constructor() {\n    this.title = 'relace';\n    this.username = '';\n    this.password = '';\n    this.email = '';\n    this.users = [];\n  }\n  refresh() {\n    fetch(`http://breneisminecraft.duckdns.org:5082/api/getUsers`, {}).then(response => {\n      response.json().then(data => {\n        this.users = data;\n      });\n    }).catch(err => {});\n  }\n  login() {\n    console.log(\"login\");\n    fetch(`http://breneisminecraft.duckdns.org:5082/api/validUser/${this.username}/${this.password}`, {}).then(response => {\n      console.log(response.json());\n    }).catch(err => {});\n  }\n  register() {\n    fetch(`http://breneisminecraft.duckdns.org:5082/api/insertUser/${this.username}/${this.password}/${this.email}`, {}).then(response => {\n      console.log(response);\n    }).catch(err => {});\n    console.log(\"register\");\n  }\n  remove() {\n    console.log(\"login\");\n    fetch(`http://breneisminecraft.duckdns.org:5082/api/removeAccount/${this.username}/${this.password}`, {}).then(response => {\n      console.log(response.json());\n    }).catch(err => {});\n  }\n  onChange(htmlElement) {\n    if (htmlElement.id == 'username') {\n      this.username = htmlElement.value;\n    }\n    if (htmlElement.id == 'password') {\n      this.password = htmlElement.value;\n    }\n    if (htmlElement.id == 'email') {\n      this.email = htmlElement.value;\n    }\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})], AppComponent);","map":{"version":3,"names":["Component","AppComponent","constructor","title","username","password","email","users","refresh","fetch","then","response","json","data","catch","err","login","console","log","register","remove","onChange","htmlElement","id","value","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\syptests\\Test\\src\\app\\app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title : string = 'relace';\r\n  username : string = '';\r\n  password : string = '';\r\n  email : string = '';\r\n  users : string[] = [];\r\n\r\n  constructor() {\r\n  }\r\n  public refresh(){\r\n    fetch(`http://breneisminecraft.duckdns.org:5082/api/getUsers`, {\r\n  }).then(response => {\r\n    response.json().then((data) => {\r\n      this.users = data;\r\n    });\r\n  }).catch(err => {\r\n\r\n  });\r\n  }\r\n  public login(){\r\n    console.log(\"login\");\r\n    fetch(`http://breneisminecraft.duckdns.org:5082/api/validUser/${this.username}/${this.password}`, {\r\n  }).then(response => {\r\n    console.log(response.json());\r\n  }).catch(err => {\r\n\r\n  });\r\n  }\r\n  public register(){\r\n    fetch(`http://breneisminecraft.duckdns.org:5082/api/insertUser/${this.username}/${this.password}/${this.email}`, {\r\n  }).then(response => {\r\n    console.log(response);\r\n  }).catch(err => {\r\n\r\n  });\r\n    console.log(\"register\");\r\n  }\r\n\r\n  public remove(){\r\n    console.log(\"login\");\r\n    fetch(`http://breneisminecraft.duckdns.org:5082/api/removeAccount/${this.username}/${this.password}`, {\r\n  }).then(response => {\r\n    console.log(response.json());\r\n  }).catch(err => {\r\n\r\n  });\r\n  }\r\n  public onChange(htmlElement: any){\r\n    if(htmlElement.id == 'username'){\r\n      this.username = htmlElement.value;\r\n    }\r\n    if(htmlElement.id == 'password'){\r\n      this.password = htmlElement.value;\r\n    }\r\n    if(htmlElement.id == 'email'){\r\n      this.email = htmlElement.value;\r\n    }\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAOvBC,YAAA;IANA,KAAAC,KAAK,GAAY,QAAQ;IACzB,KAAAC,QAAQ,GAAY,EAAE;IACtB,KAAAC,QAAQ,GAAY,EAAE;IACtB,KAAAC,KAAK,GAAY,EAAE;IACnB,KAAAC,KAAK,GAAc,EAAE;EAGrB;EACOC,OAAOA,CAAA;IACZC,KAAK,CAAC,uDAAuD,EAAE,EAChE,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAG;MACjBA,QAAQ,CAACC,IAAI,EAAE,CAACF,IAAI,CAAEG,IAAI,IAAI;QAC5B,IAAI,CAACN,KAAK,GAAGM,IAAI;MACnB,CAAC,CAAC;IACJ,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAG,CAEf,CAAC,CAAC;EACF;EACOC,KAAKA,CAAA;IACVC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpBT,KAAK,CAAC,0DAA0D,IAAI,CAACL,QAAQ,IAAI,IAAI,CAACC,QAAQ,EAAE,EAAE,EACnG,CAAC,CAACK,IAAI,CAACC,QAAQ,IAAG;MACjBM,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACC,IAAI,EAAE,CAAC;IAC9B,CAAC,CAAC,CAACE,KAAK,CAACC,GAAG,IAAG,CAEf,CAAC,CAAC;EACF;EACOI,QAAQA,CAAA;IACbV,KAAK,CAAC,2DAA2D,IAAI,CAACL,QAAQ,IAAI,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACC,KAAK,EAAE,EAAE,EAClH,CAAC,CAACI,IAAI,CAACC,QAAQ,IAAG;MACjBM,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;IACvB,CAAC,CAAC,CAACG,KAAK,CAACC,GAAG,IAAG,CAEf,CAAC,CAAC;IACAE,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EACzB;EAEOE,MAAMA,CAAA;IACXH,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpBT,KAAK,CAAC,8DAA8D,IAAI,CAACL,QAAQ,IAAI,IAAI,CAACC,QAAQ,EAAE,EAAE,EACvG,CAAC,CAACK,IAAI,CAACC,QAAQ,IAAG;MACjBM,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACC,IAAI,EAAE,CAAC;IAC9B,CAAC,CAAC,CAACE,KAAK,CAACC,GAAG,IAAG,CAEf,CAAC,CAAC;EACF;EACOM,QAAQA,CAACC,WAAgB;IAC9B,IAAGA,WAAW,CAACC,EAAE,IAAI,UAAU,EAAC;MAC9B,IAAI,CAACnB,QAAQ,GAAGkB,WAAW,CAACE,KAAK;;IAEnC,IAAGF,WAAW,CAACC,EAAE,IAAI,UAAU,EAAC;MAC9B,IAAI,CAAClB,QAAQ,GAAGiB,WAAW,CAACE,KAAK;;IAEnC,IAAGF,WAAW,CAACC,EAAE,IAAI,OAAO,EAAC;MAC3B,IAAI,CAACjB,KAAK,GAAGgB,WAAW,CAACE,KAAK;;EAElC;CACD;AA1DYvB,YAAY,GAAAwB,UAAA,EALxBzB,SAAS,CAAC;EACT0B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACW3B,YAAY,CA0DxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}